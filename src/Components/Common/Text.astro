---
interface Props {
	icon: string;
	title: string;
	subtitle: string;
	description: string;
	animation?: 'fade' | 'slide' | 'none';
	titleClass?: string;
	subtitleClass?: string;
	align?: 'center' | 'left' | 'right';
	iconColor?: string;
	hasDecoration?: boolean;
	hasShadow?: boolean;
	hasGlass?: boolean;
}

const {
	icon,
	title,
	subtitle,
	description,
	animation = 'fade',
	titleClass = 'text-transparent bg-clip-text bg-gradient-to-r from-sky-500 to-purple-500 dark:from-sky-400 dark:to-purple-400',
	subtitleClass = 'text-transparent bg-clip-text bg-gradient-to-r from-purple-500 to-sky-500 dark:from-purple-400 dark:to-sky-400',
	align = 'center',
	iconColor = 'text-sky-500 dark:text-sky-400',
	hasDecoration = true,
	hasShadow = false,
	hasGlass = false,
} = Astro.props;

const animationClass =
	animation === 'fade' ? 'animate-fade-in' : animation === 'slide' ? 'animate-slide-in-bottom' : '';

const alignClass = {
	center: 'items-center text-center',
	left: 'items-start text-left',
	right: 'items-end text-right',
}[align];
---

<style>
	.text-section {
		position: relative;
		transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
		overflow: hidden;
	}

	.text-section.with-shadow {
		padding: 2rem;
		border-radius: 1rem;
		background: rgba(255, 255, 255, 0.03);
		box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
		border: 1px solid rgba(226, 232, 240, 0.8);
	}

	.text-section.with-glass {
		background: rgba(255, 255, 255, 0.05);
		backdrop-filter: blur(10px);
		-webkit-backdrop-filter: blur(10px);
		border: 1px solid rgba(255, 255, 255, 0.1);
	}

	.text-section:hover .section-icon {
		transform: scale(1.15) rotate(5deg);
		filter: drop-shadow(0 8px 16px rgba(14, 165, 233, 0.2));
	}

	.section-icon {
		font-size: 2.5rem;
		transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
		position: relative;
		z-index: 2;
		filter: drop-shadow(0 4px 8px rgba(14, 165, 233, 0.1));
	}

	.section-icon::after {
		content: '';
		position: absolute;
		width: 140%;
		height: 140%;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		background: radial-gradient(circle, rgba(14, 165, 233, 0.1) 0%, rgba(14, 165, 233, 0) 70%);
		border-radius: 50%;
		z-index: -1;
		opacity: 0;
		transition: opacity 0.4s ease;
	}

	.text-section:hover .section-icon::after {
		opacity: 1;
	}

	.title-container {
		position: relative;
		margin-bottom: 1.5rem;
	}

	.title-decoration {
		position: absolute;
		bottom: -10px;
		left: 50%;
		transform: translateX(-50%);
		width: 80px;
		height: 3px;
		background: linear-gradient(90deg, rgba(14, 165, 233, 0.2), rgba(14, 165, 233, 0.8), rgba(14, 165, 233, 0.2));
		border-radius: 3px;
		z-index: 1;
	}

	.title-decoration.left {
		left: 0;
		transform: none;
	}

	.title-decoration.right {
		left: auto;
		right: 0;
		transform: none;
	}

	.description {
		line-height: 1.8;
		transition: all 0.3s ease;
	}

	.text-section:hover .description {
		transform: translateY(-3px);
	}

	.animate-fade-in {
		animation: fadeIn 1s cubic-bezier(0.25, 0.8, 0.25, 1);
	}

	.animate-slide-in-bottom {
		animation: slideInBottom 0.8s cubic-bezier(0.25, 0.8, 0.25, 1);
	}

	@keyframes fadeIn {
		from {
			opacity: 0;
		}
		to {
			opacity: 1;
		}
	}

	@keyframes slideInBottom {
		from {
			transform: translateY(30px);
			opacity: 0;
		}
		to {
			transform: translateY(0);
			opacity: 1;
		}
	}

	/* Dark mode styles */
	:global(.dark) .text-section.with-shadow {
		background: rgba(30, 41, 59, 0.03);
		border-color: rgba(51, 65, 85, 0.5);
	}

	:global(.dark) .text-section.with-glass {
		background: rgba(15, 23, 42, 0.3);
		border-color: rgba(51, 65, 85, 0.2);
	}

	/* Responsive adjustments */
	@media (max-width: 768px) {
		.section-icon {
			font-size: 2rem;
		}

		.title-decoration {
			width: 60px;
		}

		.text-section.with-shadow {
			padding: 1.5rem;
		}
	}
</style>

<section
	class={`text-section flex flex-col gap-6 py-4 ${alignClass} ${animationClass} ${hasShadow ? 'with-shadow' : ''} ${hasGlass ? 'with-glass' : ''}`}
	role='region'
	aria-label={title}
	data-aos='fade-up'
	data-aos-duration='800'
	data-aos-once='true'>
	<i class={`section-icon ${icon} ${iconColor}`}></i>

	<div class='title-container'>
		<h2 class='text-2xl font-extrabold text-slate-900 dark:text-white md:text-3xl lg:text-4xl mb-2'>
			<span class={titleClass}>{title}</span>
		</h2>

		<h3 class='text-xl font-bold text-slate-900 dark:text-white md:text-2xl lg:text-3xl'>
			<span class={subtitleClass}>{subtitle}</span>
		</h3>

		{hasDecoration && <div class={`title-decoration ${align}`} />}
	</div>

	<p class='description text-lg font-normal text-slate-600 dark:text-slate-300 max-w-prose md:text-xl'>
		{description}
	</p>
</section>

<script>
	import AOS from 'aos';

	document.addEventListener('astro:page-load', () => {
		// Initialize AOS with custom settings
		AOS.init({
			duration: 800,
			easing: 'ease-out-cubic',
			once: true,
			offset: 50,
		});
	});
</script>
